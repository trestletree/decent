name: Build precompiled NIFs

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}

    permissions:
      contents: write
      id-token: write
      attestations: write

    strategy:
      fail-fast: false
      matrix:
        nif: ["2.17", "2.16", "2.15"]
        job:
          - {
              target: arm-unknown-linux-gnueabihf,
              os: ubuntu-20.04,
              use-cross: true,
            }
          - {
              target: aarch64-unknown-linux-gnu,
              os: ubuntu-20.04,
              use-cross: true,
            }
          - { target: aarch64-apple-darwin, os: macos-15 }
          - { target: x86_64-apple-darwin, os: macos-15 }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-20.04 }
          - {
              target: x86_64-unknown-linux-musl,
              os: ubuntu-20.04,
              use-cross: true,
            }

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Extract project version
        shell: bash
        run: |
          # Get the project version from mix.exs
          echo "PROJECT_VERSION=$(sed -n 's/^  @version "\(.*\)"/\1/p' mix.exs | head -n1)" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}

      - name: Build the project
        id: build-crate
        uses: philss/rustler-precompiled-action@v1.0.1
        with:
          project-name: decent
          project-version: ${{ env.PROJECT_VERSION }}
          target: ${{ matrix.job.target }}
          nif-version: ${{ matrix.nif }}
          use-cross: ${{ matrix.job.use-cross }}
          project-dir: "native/decent"

      - name: Artifact upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-crate.outputs.file-name }}
          path: ${{ steps.build-crate.outputs.file-path }}

      - name: Publish archives and packages
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.build-crate.outputs.file-path }}
        if: startsWith(github.ref, 'refs/tags/')

  generate_checksum:
    runs-on: ubuntu-20.04
    needs: build_release
    permissions:
      contents: write
      id-token: write
      attestations: write
    env:
      DECENT_BUILD: true
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.17.2-otp-27"
          otp-version: "27.0"

      - name: Install dependencies
        run: mix deps.get

      - name: Compile dependencies
        run: mix deps.compile

      - name: Compile
        run: mix compile

      - name: Generate checksum
        id: generate-checksum
        run: |
          mix rustler_precompiled.download Decent --all --ignore-unavailable --print
          CHECKSUM_FILE=$(ls checksum-*.exs)
          echo "file-name=$CHECKSUM_FILE" >> $GITHUB_OUTPUT
          echo "file-path=$(pwd)/$CHECKSUM_FILE" >> $GITHUB_OUTPUT

      - name: Upload checksum
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.generate-checksum.outputs.file-name }}
          path: ${{ steps.generate-checksum.outputs.file-path }}

      - name: Publish checksum
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.generate-checksum.outputs.file-path }}
        if: startsWith(github.ref, 'refs/tags/')
